% NVPROF(1) NVIDIA | CUDA Toolkit Documentation
%
% 2015-09-28

NAME
====

nvprof - NVIDIA ® Cuda command line profiler

SYNOPSIS
========

nvprof [_OPTION_]... [_APPLICATION_] [_APPLICATION-ARGUMENT_]...

OPTIONS
=======

**−−aggregate−mode** &lt;on|off&gt;

This option turns on/off aggregate mode for events and metrics specified
by subsequent "−−events" and "−−metrics" options. Those event/metric
values will be collected for each domain instance, instead of the whole
device. Allowed values:

on − turn on aggregate mode (default)

off − turn off aggregate mode

**−−analysis−metrics**

Collect profiling data that can be imported to Visual Profiler’s
"analysis" mode. Note: Use "−−export−profile" to specify an export file.

**−−concurrent−kernels** &lt;on|off&gt;

Turn on/off concurrent kernel execution. If concurrent kernel execution
is off, all kernels running on one device will be serialized. Allowed
values:

on − turn on concurrent kernel execution (default)

off − turn off concurrent kernel execution

**−−devices** &lt;device ids&gt;

This option changes the scope of subsequent "−−events", "−−metrics",
"−−query−events" and "−−query−metrics" options. Allowed values:

all − change scope to all valid devices

comma−separated device IDs − change scope to specified

devices

**−e**, **−−events** &lt;event names&gt;

Specify the events to be profiled on certain device(s). Multiple event
names separated by comma can be specified. Which device(s) are profiled
is controlled by the "−−devices" option. Otherwise events will be
collected on all devices. For a list of available events, use
"−−query−events". Use "−−events all" to profile all events available for
each device. Use "−−devices" and "−−kernels" to select a specific kernel
invocation.

**−−kernels** &lt;kernel path syntax&gt;

This option changes the scope of subsequent "−−events", "−−metrics"
options. The syntax is as following:

&lt;kernel name&gt;

or

&lt;context id/name&gt;:&lt;stream id/name&gt;:&lt;kernel
name&gt;:&lt;invocation&gt;

The context/stream IDs, names, kernel name and invocation can be regular
expressions. Empty string matches any number or characters. If
&lt;context id/name&gt; or &lt;stream id/name&gt; is a positive number,
it’s strictly matched against the CUDA context/stream ID. Otherwise it’s
treated as a regular expression and matched against the context/stream
name specified by the NVTX library. If the invocation count is a
positive number, it’s strictly matched against the invocation of the
kernel. Otherwise it’s treated as a regular expression. Example:
**−−kernels** "1:foo:bar:2" − profile any kernel whose name contains
"bar" and was the 2nd instance on context 1 and on stream named "foo".

**−m**, **−−metrics** &lt;metric names&gt;

Specify the metrics to be profiled on certain device(s). Multiple metric
names separated by comma can be specified. Which device(s) are profiled
is controlled by the "−−devices" option. Otherwise metrics will be
collected on all devices. For a list of available metrics, use
"−−query−metrics". Use "−−metrics all" to profile all metrics available
for each device. Use "−−devices" and "−−kernels" to select a specific
kernel invocation.

**−−profile−all−processes**

Profile all processes launched by the same user who launched this nvprof
instance. Note: Only one instance of nvprof can run with this option at
the same time. Under this mode, there’s no need to specify an
application to run.

**−−profile−api−trace** &lt;none|runtime|driver|all&gt;

Turn on/off CUDA runtime/driver API tracing. Allowed values:

none − turn off API tracing

runtime − only turn on CUDA runtime API tracing driver − only turn on
CUDA driver API tracing all − turn on all API tracing (default)

**−−profile−child−processes**

Profile the application and all child processes launched by it.

**−−profile−from−start** &lt;on|off&gt;

Enable/disable profiling from the start of the application. If it’s
disabled, the application can use {cu,cuda}Profiler{Start,Stop} to turn
on/off profiling. Allowed values:

on − enable profiling from start (default)

off − disable profiling from start

**−−query−events**

List all the events available on the device(s). Device(s) queried can be
controlled by the "−−devices" option.

**−−query−metrics**

List all the metrics available on the device(s). Device(s) queried can
be controlled by the "−−devices" option.

**−−replay−mode** &lt;mode&gt;

Choose replay mode used when not all events/metrics can be collected in
a single run. Allowed values:

disabled − replay is disabled, events/metrics couldn’t

be profiled will be dropped

kernel − each kernel invocation is replayed (default)

application − the entire application is replayed.

This is incompatible with "−−profile−all−processes" or
"profile−child−processes"

**−−system−profiling** &lt;on|off&gt;

Turn on/off power, clock, and thermal profiling. Allowed values:

on − turn on system profiling

off − turn off system profiling (default)

**−t**, **−−timeout** &lt;seconds&gt;

Set an execution timeout (in seconds) for the CUDA application. Note:
Timeout starts counting from the moment the CUDA driver is initialized.
If the application doesn’t call any CUDA APIs, timeout won’t be
triggered.

**−−unified−memory−profiling** &lt;per−process−device|off&gt;

Options for unified memory profiling. Allowed values:

per−process−device − collect counts for each process

and each device

off − turn off unified memory profiling (default)

**−−cpu−profiling** &lt;on|off&gt;

Turn on CPU profiling. Note: CPU profiling is not supported in
multi−process mode.

**−−cpu−profiling−frequency** &lt;frequency&gt;

Set the CPU profiling frequency in samples per second. Default is 100Hz.
Maximum is 500Hz.

**−−cpu−profiling−max−depth** &lt;depth&gt;

Set the maximum depth of each call stack. Zero means no limit. Default
is zero.

**−−cpu−profiling−mode** &lt;mode&gt;

Set the output mode of CPU profiling. Allowed values:

"flat" − Show flat profile

"top−down" − Show parent functions at the top "bottom−up" − Show parent
functions at the bottom

(default)

**−−cpu−profiling−percentage−threshold** &lt;threshold&gt;

Filter out the entries that are below the set percentage threshold. The
limit should be an integer between 0 and 100, inclusive. Zero means no
limit. Default is zero.

**−−cpu−profiling−scope** &lt;scope&gt;

Choose the profiling scope. Allowed values:

"function" − Each level in the stack trace represents

a distinct function (default)

"instruction" − Each level in the stack trace represents

a distinct instruction address

**−−cpu−profiling−show−ccff** &lt;on|off&gt;

Whether to print Common Compiler Feedback Format (CCFF) messages
embedded in the binary. Note: this option implies "−−cpu−profiling−scope
instruction".

**−−cpu−profiling−show−library** &lt;on|off&gt;

Whether to print the library name for each sample.

**−−cpu−profiling−thread−mode** &lt;mode&gt;

Set the thread mode of CPU profiling. Allowed values:

"separated" − Show separate profile for each thread

"aggregated" − Aggregate data from all threads

**−−context−name** &lt;name&gt;

Name of the CUDA context.

"%i" in the context name string is replaced with

the ID of the context.

"%p" in the context name string is replaced with

the process ID of the application being profiled.

"%q{&lt;ENV&gt;}" in the context name string is replaced

with the value of the environment variable "&lt;ENV&gt;". If the
environment variable is not set it’s an error.

"%h" in the context name string is replaced with

the hostname of the system.

"%%" in the context name string is replaced with

"%". Any other character following "%" is illegal.

+----------------+----------------+----------------+----------------+----------------+
|                | **−−csv**      |                | Use            |                |
|                |                |                | comma−separate |                |
|                |                |                | d              |                |
|                |                |                | values in the  |                |
|                |                |                | output.        |                |
+----------------+----------------+----------------+----------------+----------------+

**−−demangling** &lt;on|off&gt;

Turn on/off C++ name demangling of function names. Allowed values:

on − turn on demangling (default)

off − turn off demangling

**−u**, **−−normalized−time−unit** &lt;s|ms|us|ns|col|auto&gt;

Specify the unit of time that will be used in the output. Allowed
values:

s − second, ms − millisecond, us − microsecond,

ns − nanosecond

col − a fixed unit for each column

auto (default) − the scale is chosen for each value

based on its length.

**−−print−api−summary**

Print a summary of CUDA runtime/driver API calls.

**−−print−api−trace**

Print CUDA runtime/driver API trace.

**−−print−gpu−summary**

Print a summary of the activities on the GPU (including CUDA kernels and
memcpy’s/memset’s).

**−−print−gpu−trace**

Print individual kernel invocations (including CUDA memcpy’s/memset’s)
and sort them in chronological order. In event/metric profiling mode,
show events/metrics for each kernel invocation.

**−s**, **−−print−summary**

Print a summary of the profiling result on screen. Note: This is the
default unless "−−export−profile" or other print options are used.

**−−print−summary−per−gpu**

Print a summary of the profiling result for each GPU.

**−−process−name** &lt;name&gt;

Name of the process.

"%p" in the process name string is replaced with

the process ID of the application being profiled.

"%q{&lt;ENV&gt;}" in the process name string is replaced

with the value of the environment variable "&lt;ENV&gt;". If the
environment variable is not set it’s an error.

"%h" in the process name string is replaced with

the hostname of the system.

"%%" in the process

name string is replaced with

"%". Any other character following "%" is illegal.

**−−quiet**

Suppress all nvprof output.

**−−stream−name** &lt;name&gt;

Name of the CUDA stream.

"%i" in the stream name string is replaced with the

ID of the stream.

"%p" in the stream name string is replaced with

the process ID of the application being profiled.

"%q{&lt;ENV&gt;}" in the stream name string is replaced

with the value of the environment variable "&lt;ENV&gt;". If the
environment variable is not set it’s an error.

"%h" in the stream name string is replaced with

the hostname of the system.

"%%" in the stream name string is replaced with

"%". Any other character following "%" is illegal.

**−o**, **−−export−profile** &lt;filename&gt;

Export the result file which can be imported later or opened by the
NVIDIA Visual Profiler.

"%p" in the file name string is replaced with the

process ID of the application being profiled.

"%q{&lt;ENV&gt;}" in the file name string is replaced

with the value of the environment variable "&lt;ENV&gt;". If the
environment variable is not set it’s an error.

"%h" in the file name string is replaced with the

hostname of the system.

"%%" in the file name string is replaced with "%".

Any other character following "%" is illegal.

By default, this option disables the summary output. Note:

If the application being profiled creates child processes, or if
’−−profile−all−processes’ is used, the "%p" format is needed to get
correct export files for each process.

**−f**, **−−force−overwrite**

Force overwriting all output files (any existing files will be
overwritten).

**−i**, **−−import−profile** &lt;filename&gt;

Import a result profile from a previous run.

**−−log−file** &lt;filename&gt;

Make nvprof send all its output to the specified file, or one of the
standard channels. The file will be overwritten. If the file doesn’t
exist, a new one will be created.

"%1" as the whole file name indicates standard output

channel (stdout).

"%2" as the whole file name indicates standard error

channel (stderr). Note: This is the default.

"%p" in the file name string is replaced with the

process ID of the application being profiled.

"%q{&lt;ENV&gt;}" in the file name string is replaced

with the value of the environment variable "&lt;ENV&gt;". If the
environment variable is not set it’s an error.

"%h" in the file name string is replaced with the

hostname of the system.

"%%" in the file name is replaced with "%".

Any other character following "%" is illegal.

**−h**, **−−help**

Print this help information.

**−V**, **−−version**

Print version information of this tool.

AUTHORS
======

This man page was authored by Jeremi Piotrowski <jeremi.piotrowski@gmail.com>.  
The **nvprof** tool was built by NVIDIA ®.

COPYRIGHT
=========

Copyright © 2012 − 2015 NVIDIA Corporation Release version 7.5.18 (21)

